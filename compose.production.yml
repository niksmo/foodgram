version: '3'

name: kittygram

volumes:
  pg_data:
    name: kittygram_pg_data
  static:
    name: kittygram_static
  media:
    name: kittygram_media

networks:
  db:
    name: kittygram_net-db
  backend:
    name: kittygram_net-backend

services:
  gateway:
    container_name: kittygram_gateway
    image: nikolaysmolov/kittygram_gateway:latest
    restart: unless-stopped
    ports:
      - ${GATEWAY_HOST}:${GATEWAY_PORT}:80
    volumes:
      - static:/var/www/static:ro
      - media:/var/www/media:ro
    networks:
      - backend
    depends_on:
      - backend
      - frontend

  backend:
    image: nikolaysmolov/kittygram_backend:latest
    container_name: kittygram_backend
    restart: unless-stopped
    env_file: .env
    networks:
      - backend
      - db
    volumes:
      - static:/app/collected_static
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13.16-alpine
    container_name: kittygram_db
    restart: unless-stopped
    user: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - db
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    image: nikolaysmolov/kittygram_frontend:latest
    container_name: kittygram_frontend
    volumes:
      - static:/app/build
