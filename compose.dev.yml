version: '3'

name: foodgram

volumes:
  pg_data:
    name: foodgram_pg_data
  static:
    name: foodgram_static
  media:
    name: foodgram_media

networks:
  postgres-net:
    name: foodgram_net-postgres
  backend-net:
    name: foodgram_net-backend

services:
  gateway:
    build:
      context: ./nginx
    container_name: foodgram_gateway
    restart: unless-stopped
    ports:
      - ${GATEWAY_HOST}:${GATEWAY_PORT}:80
    volumes:
      - static:/var/www/static:ro
      - media:/var/www/media:ro
    networks:
      - backend-net
    depends_on:
      - backend
      - frontend

  backend:
    build:
      context: ./backend
    container_name: foodgram_backend
    restart: unless-stopped
    env_file: .env
    networks:
      - backend-net
      - postgres-net
    volumes:
      - static:/app/collected_static
      - media:/app/media
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: foodgram_db
    restart: unless-stopped
    user: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - postgres-net
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      args:
        - NODE_VERSION=20.17-alpine
    container_name: foodgram_frontend
    volumes:
      - static:/app/build
